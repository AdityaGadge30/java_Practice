public class MyClass {
    public static void main(String args[]) {
    
    
        int[] arr = {7,8,9,0,1,2,3,4,5,6};
        int target = 6;
        
        System.out.println(search(arr , target));
    }
    
    static int search(int[] arr , int target){
        
        //find pivot
        
        int pivot = find_pivot_with_duplicates(arr);
        
        if(pivot == -1){
            //if pivot not found then search for whole array
            return Binary_search(arr , target , 0 , arr.length -1);
        }
        
        if(target == arr[pivot]){
            return pivot;
        }
        
        if(target >= arr[0]){
            return Binary_search(arr , target , 0 , pivot - 1);
        }else{
            return Binary_search(arr , target , pivot + 1 , arr.length - 1);
        }
    }
    
    static public int Binary_search(int[] arr , int target , int start , int end){
        
        while(start <= end ){
            
            int mid = start + (end - start) / 2;
            
            if(target > arr[mid]){
                start = mid+1;
            }else if(target < arr[mid]){
                end = mid - 1 ;
            }else{
                return mid;
            }
        }
        
        return -1;
        
    }
    
    static int find_pivot_with_duplicates(int[] arr){
        int start = 0;
        int end = arr.length -1;
        
        while(start <= end){
            
            int mid = start + (end - start) / 2;
            
            //case 1
            if(mid < end && arr[mid] > arr[mid+1]){
                return mid;
            }
            //case 2
            if(mid > start && arr[mid-1] > arr[mid]){
                return mid-1;
            }
            
            
            //if start , mid , end ...all are equal
            if(arr[start] == arr[mid] && arr[mid] == arr[end]){
                
                // if start is pivot element then return it ... otherwise increase start
                
                if(arr[start] > arr[start + 1]){
                    return start;
                }else{
                    start ++;
                }
                
                
                // if end is pivot element then return it ... otherwise decrease end
                
                
                if(arr[end - 1] > arr[end]){
                    return end - 1;
                }else{
                    end--;
                }
                
            }else if(arr[start] < arr[mid] || (arr[start] == arr[mid] && arr[mid] > arr[end] )){
                //case3
                start = mid + 1;
                
            }else{
                //case 4
                end = mid -1;
            }
            
        }
        
        return -1;
    } 
}